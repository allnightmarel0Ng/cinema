// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BasicAuthScopes  = "BasicAuth.Scopes"
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Actor defines model for Actor.
type Actor struct {
	Gender      *int    `json:"gender,omitempty"`
	Id          *int    `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	ProfilePath *string `json:"profile_path,omitempty"`
}

// Genre defines model for Genre.
type Genre struct {
	Id   *int    `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// Movie defines model for Movie.
type Movie struct {
	Actors          *[]Actor            `json:"actors,omitempty"`
	Adult           *bool               `json:"adult,omitempty"`
	Genres          *[]Genre            `json:"genres,omitempty"`
	Id              *int                `json:"id,omitempty"`
	Overview        *string             `json:"overview,omitempty"`
	PosterPath      *string             `json:"poster_path,omitempty"`
	ReleaseDate     *openapi_types.Date `json:"release_date,omitempty"`
	Revenue         *int                `json:"revenue,omitempty"`
	StreamLink      *string             `json:"stream_link,omitempty"`
	Title           *string             `json:"title,omitempty"`
	TmdbId          *int                `json:"tmdb_id,omitempty"`
	TmdbVoteAverage *float32            `json:"tmdb_vote_average,omitempty"`
	TmdbVoteCount   *int                `json:"tmdb_vote_count,omitempty"`
	VoteAverage     *float32            `json:"vote_average,omitempty"`
	VoteCount       *int                `json:"vote_count,omitempty"`
}

// Rating defines model for Rating.
type Rating struct {
	MovieId *int     `json:"movie_id,omitempty"`
	Rating  *float32 `json:"rating,omitempty"`
}

// Review defines model for Review.
type Review struct {
	Liked   *bool   `json:"liked,omitempty"`
	MovieId *int    `json:"movie_id,omitempty"`
	Text    *string `json:"text,omitempty"`
	Title   *string `json:"title,omitempty"`
	UserId  *int    `json:"user_id,omitempty"`
}

// GetActorsSearchParams defines parameters for GetActorsSearch.
type GetActorsSearchParams struct {
	Prompt string `form:"prompt" json:"prompt"`
}

// PostLoginJSONBody defines parameters for PostLogin.
type PostLoginJSONBody struct {
	Password *string `json:"password,omitempty"`
	Username *string `json:"username,omitempty"`
}

// GetMoviesPopularParams defines parameters for GetMoviesPopular.
type GetMoviesPopularParams struct {
	Page *int `form:"page,omitempty" json:"page,omitempty"`
	Size *int `form:"size,omitempty" json:"size,omitempty"`
}

// GetMoviesSearchParams defines parameters for GetMoviesSearch.
type GetMoviesSearchParams struct {
	Prompt string `form:"prompt" json:"prompt"`
}

// DeleteRatingParams defines parameters for DeleteRating.
type DeleteRatingParams struct {
	MovieId int `form:"movie_id" json:"movie_id"`
}

// PostRatingParams defines parameters for PostRating.
type PostRatingParams struct {
	MovieId int     `form:"movie_id" json:"movie_id"`
	Rating  float32 `form:"rating" json:"rating"`
}

// PostRegisterJSONBody defines parameters for PostRegister.
type PostRegisterJSONBody struct {
	Password *string `json:"password,omitempty"`
	Username *string `json:"username,omitempty"`
}

// PostReviewsMovieIdJSONBody defines parameters for PostReviewsMovieId.
type PostReviewsMovieIdJSONBody struct {
	Liked *bool   `json:"liked,omitempty"`
	Text  *string `json:"text,omitempty"`
	Title *string `json:"title,omitempty"`
}

// PostLoginJSONRequestBody defines body for PostLogin for application/json ContentType.
type PostLoginJSONRequestBody PostLoginJSONBody

// PostRegisterJSONRequestBody defines body for PostRegister for application/json ContentType.
type PostRegisterJSONRequestBody PostRegisterJSONBody

// PostReviewsMovieIdJSONRequestBody defines body for PostReviewsMovieId for application/json ContentType.
type PostReviewsMovieIdJSONRequestBody PostReviewsMovieIdJSONBody
